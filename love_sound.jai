// This file was generated by generate_bindings.lua

Decoder :: #type,distinct lua.Ref;
SoundData :: #type,distinct lua.Ref;


// Attempts to find a decoder for the encoded sound data in the specified file.
love_sound_newDecoder :: (file: File, buffer: lua.Number) -> (decoder: Decoder) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "sound");
	lua.getfield(L, -1, "newDecoder");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx file);
	lua.pushnumber(L, buffer);
	lua.call(L, 2, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Attempts to find a decoder for the encoded sound data in the specified file.
love_sound_newDecoder :: (filename: *u8, buffer: lua.Number) -> (decoder: Decoder) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "sound");
	lua.getfield(L, -1, "newDecoder");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushstring(L, filename);
	lua.pushnumber(L, buffer);
	lua.call(L, 2, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates new SoundData from a filepath, File, or Decoder. It's also possible to create SoundData with a custom sample rate, channel and bit depth.
love_sound_newSoundData :: (filename: *u8) -> (sounddata: SoundData) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "sound");
	lua.getfield(L, -1, "newSoundData");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushstring(L, filename);
	lua.call(L, 1, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates new SoundData from a filepath, File, or Decoder. It's also possible to create SoundData with a custom sample rate, channel and bit depth.
love_sound_newSoundData :: (file: File) -> (sounddata: SoundData) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "sound");
	lua.getfield(L, -1, "newSoundData");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx file);
	lua.call(L, 1, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates new SoundData from a filepath, File, or Decoder. It's also possible to create SoundData with a custom sample rate, channel and bit depth.
love_sound_newSoundData :: (decoder: Decoder) -> (sounddata: SoundData) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "sound");
	lua.getfield(L, -1, "newSoundData");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx decoder);
	lua.call(L, 1, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates new SoundData from a filepath, File, or Decoder. It's also possible to create SoundData with a custom sample rate, channel and bit depth.
love_sound_newSoundData :: (samples: lua.Number, rate: lua.Number, bits: lua.Number, channels: lua.Number) -> (sounddata: SoundData) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "sound");
	lua.getfield(L, -1, "newSoundData");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushnumber(L, samples);
	lua.pushnumber(L, rate);
	lua.pushnumber(L, bits);
	lua.pushnumber(L, channels);
	lua.call(L, 4, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
