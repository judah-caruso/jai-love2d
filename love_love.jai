// This file was generated by generate_bindings.lua

Data :: #type,distinct lua.Ref;
Object :: #type,distinct lua.Ref;


// Gets the current running version of LÖVE.
love_getVersion :: () -> struct { _major: lua.Number; _minor: lua.Number; _revision: lua.Number; _codename: *u8; } #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "getVersion");
	lua._remove(L, -2);
	lua._remove(L, -1);

	lua.call(L, 0, 4);

	return .{ _major = lua.tonumber(L, -4), _minor = lua.tonumber(L, -3), _revision = lua.tonumber(L, -2), _codename = lua.tolstring(L, -1, null) };
}
// Gets whether LÖVE displays warnings when using deprecated functionality. It is disabled by default in fused mode, and enabled by default otherwise.
love_hasDeprecationOutput :: () -> (enabled: s32) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "hasDeprecationOutput");
	lua._remove(L, -2);
	lua._remove(L, -1);

	lua.call(L, 0, 1);

	return lua.toboolean(L, -1);
}
// Gets whether the given version is compatible with the current running version of LÖVE.
love_isVersionCompatible :: (version: *u8) -> (compatible: s32) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "isVersionCompatible");
	lua._remove(L, -2);
	lua._remove(L, -1);

	lua.pushstring(L, version);
	lua.call(L, 1, 1);

	return lua.toboolean(L, -1);
}
// Gets whether the given version is compatible with the current running version of LÖVE.
love_isVersionCompatible :: (major: lua.Number, minor: lua.Number, revision: lua.Number) -> (compatible: s32) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "isVersionCompatible");
	lua._remove(L, -2);
	lua._remove(L, -1);

	lua.pushnumber(L, major);
	lua.pushnumber(L, minor);
	lua.pushnumber(L, revision);
	lua.call(L, 3, 1);

	return lua.toboolean(L, -1);
}
// Sets whether LÖVE displays warnings when using deprecated functionality. It is disabled by default in fused mode, and enabled by default otherwise.
love_setDeprecationOutput :: (enable: s32) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "setDeprecationOutput");
	lua._remove(L, -2);
	lua._remove(L, -1);

	lua.pushboolean(L, enable);
	lua.call(L, 1, 0);
}
