// This file was generated by generate_bindings.lua

GlyphData :: #type,distinct lua.Ref;
Rasterizer :: #type,distinct lua.Ref;

HintingMode :: enum {
	Normal; // normal
	Light; // light
	Mono; // mono
	None; // none
}
HintingModeMap :: string.[ "normal", "light", "mono", "none" ];


// Creates a new BMFont Rasterizer.
love_font_newBMFontRasterizer :: (imagedata: ImageData, glyphs: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newBMFontRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx imagedata);
	lua.pushstring(L, glyphs);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 3, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new BMFont Rasterizer.
love_font_newBMFontRasterizer :: (filename: *u8, glyphs: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newBMFontRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushstring(L, filename);
	lua.pushstring(L, glyphs);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 3, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new GlyphData.
love_font_newGlyphData :: (rasterizer: Rasterizer, glyph: lua.Number) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newGlyphData");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx rasterizer);
	lua.pushnumber(L, glyph);
	lua.call(L, 2, 0);
}
// Creates a new Image Rasterizer.
love_font_newImageRasterizer :: (imagedata: ImageData, glyphs: *u8, extraspacing: lua.Number, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newImageRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx imagedata);
	lua.pushstring(L, glyphs);
	lua.pushnumber(L, extraspacing);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 4, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new Rasterizer.
love_font_newRasterizer :: (filename: *u8) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushstring(L, filename);
	lua.call(L, 1, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new Rasterizer.
love_font_newRasterizer :: (data: FileData) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx data);
	lua.call(L, 1, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new Rasterizer.
love_font_newRasterizer :: (size: lua.Number, hinting: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushnumber(L, size);
	lua.pushstring(L, hinting);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 3, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new Rasterizer.
love_font_newRasterizer :: (filename: *u8, size: lua.Number, hinting: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushstring(L, filename);
	lua.pushnumber(L, size);
	lua.pushstring(L, hinting);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 4, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new Rasterizer.
love_font_newRasterizer :: (filedata: FileData, size: lua.Number, hinting: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx filedata);
	lua.pushnumber(L, size);
	lua.pushstring(L, hinting);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 4, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new Rasterizer.
love_font_newRasterizer :: (imagedata: ImageData, glyphs: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx imagedata);
	lua.pushstring(L, glyphs);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 3, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new Rasterizer.
love_font_newRasterizer :: (filename: *u8, glyphs: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushstring(L, filename);
	lua.pushstring(L, glyphs);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 3, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new TrueType Rasterizer.
love_font_newTrueTypeRasterizer :: (size: lua.Number, hinting: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newTrueTypeRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushnumber(L, size);
	lua.pushstring(L, hinting);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 3, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new TrueType Rasterizer.
love_font_newTrueTypeRasterizer :: (filename: *u8, size: lua.Number, hinting: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newTrueTypeRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.pushstring(L, filename);
	lua.pushnumber(L, size);
	lua.pushstring(L, hinting);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 4, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
// Creates a new TrueType Rasterizer.
love_font_newTrueTypeRasterizer :: (filedata: FileData, size: lua.Number, hinting: *u8, dpiscale: lua.Number) -> (rasterizer: Rasterizer) #no_context #c_call {
	lua.getfield(L, lua.LUA_GLOBALSINDEX, "love");
	lua.getfield(L, -1, "font");
	lua.getfield(L, -1, "newTrueTypeRasterizer");
	lua._remove(L, -3);
	lua._remove(L, -2);

	lua.rawgeti(L, lua.LUA_REGISTRYINDEX, xx filedata);
	lua.pushnumber(L, size);
	lua.pushstring(L, hinting);
	lua.pushnumber(L, dpiscale);
	lua.call(L, 4, 1);

	return xx lua.luaL_ref(L, lua.LUA_REGISTRYINDEX);
}
